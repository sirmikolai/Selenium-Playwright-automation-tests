name: Manual test runner

on:
  workflow_dispatch:
    inputs:
      browser:
        type: choice
        description: Choose browser
        default: Chrome
        options:
        - Chrome
        - Firefox
        - Edge

jobs:
  Build-project:

    name: Build project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
        if: ${{ env.JAVA_HOME }} == ''
      - name: Build and install with Maven
        run: mvn clean install --file ./SeleniumProject/pom.xml -DskipTests
        
  Install-browser:

    name: Install browser
    runs-on: ubuntu-latest
    needs: Build-project
    steps:
      - uses: actions/checkout@v3
      - name: Install Chrome Browser
        if: "contains(github.event.inputs.browser, 'Chrome')"
        uses: browser-actions/setup-chrome@v1
      - name: Install Firefox Browser
        if: "contains(github.event.inputs.browser, 'Firefox')"
        uses: browser-actions/setup-firefox@v1
      - name: Install Edge Browser
        if: "contains(github.event.inputs.browser, 'Edge')"
        uses: browser-actions/setup-edge@v1

  Initialize-app-server:

    name: Initilize app server
    runs-on: ubuntu-latest  
    needs: Install-browser
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
        if: ${{ env.JAVA_HOME }} == ''
      - name: Initialize App server
        run: mvn clean install --file ./SeleniumProject/pom.xml -DsuiteFile=initializeappserversuite.xml -Dbrowser=${{ inputs.browser }} -Dheadless=yes

  Execute-E2E-tests:

    name: Execute E2E tests
    runs-on: ubuntu-latest  
    needs: Initialize-app-server
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
        if: ${{ env.JAVA_HOME }} == ''
      - name: Run all E2E tests
        run: mvn clean install --file ./SeleniumProject/pom.xml -DsuiteFile=testsuite.xml -Dbrowser=${{ inputs.browser }} -Dheadless=yes
  Remove-test-data:

    name: Remove test data
    runs-on: ubuntu-latest  
    needs: Execute-E2E-tests
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
        if: ${{ env.JAVA_HOME }} == ''
      - name: Remove test data
        run: mvn clean install --file ./SeleniumProject/pom.xml -DsuiteFile=removetestdatasuite.xml -Dbrowser=${{ inputs.browser }} -Dheadless=yes
  Generate-allure-report:
  
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: Remove-test-data
    steps:
      - uses: actions/checkout@v2

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: ./SeleniumProject/allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
